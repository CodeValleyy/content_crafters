name: Rust CI

on:
  push:
    branches:
      - master
      - develop
    tags:
      - "*"
  pull_request:
    branches:
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --release --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ccrafters_api-${{ matrix.os }}
          path: |
            ${{ (matrix.os == 'windows-latest' && 'target/release/api.exe') || 'target/release/api' }}

  publish_release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload macOS API Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ccrafters_api-macos-latest/api
          asset_name: ccrafters_api-macos-latest.zip
          asset_content_type: application/zip
      - name: Upload Ubuntu API Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ccrafters_api-ubuntu-latest/api
          asset_name: ccrafters_api-ubuntu-latest.zip
          asset_content_type: application/zip
      - name: Upload Windows API Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ccrafters_api-windows-latest/api.exe
          asset_name: ccrafters_api-windows-latest.zip
          asset_content_type: application/zip
